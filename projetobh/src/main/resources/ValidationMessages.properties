#1°Tipo de validação
#message faz referenacia ao atributo message que teriamos lá nas anoteções no pacote modelo
#Quando utiliza esse tipo de validação, todas as anotações que estivem na modelo do tipo Size, NotBlank, NotNull ou Digits vão utilizar essa messages
#Como uma padronização para todos os campos das classes que tem essas anotações  
javax.validation.constraints.Size.message= Deve estar entre {min} e {max} caracteres.
javax.validation.constraints.NotBlank.message= \u00C9 obrigat\u00F3rio.
javax.validation.constraints.NotNull.message= \u00C9 obrigat\u00F3rio.
javax.validation.constraints.Digits.message= Deve conter no máximo {integer} digitos.

#####################################################################################################################################################

#2° Forma de validacao - e quando vc cria uma chave para a propriedade e adiciona um valor para essa propriedade que vai ser o valor da mensagem
#Validação dos compos de funcionario
NotNull.funcionario.cargo=Selecione um cargo
PastOrPresent.funcionario.dataEntrada=Data deve ser igual ou anterior a atual.

#Validacao campos de endereco
NotNull.endereco.numero=Número é obrigatório. Informe 0 para sem numero.
NotNull.endereco.uf=Selecione uma UF.
Size.endereco.cep=Deve conter {max} caracteres.